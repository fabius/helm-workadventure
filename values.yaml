domain: "example.com"
tls:
  acmeMail: keatonpotatoes@aol.com
  ingressClass: traefik

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

image:
  tag: ""

jitsi:
  namespace: default
  secrets:
    JICOFO_AUTH_PASSWORD: aoijdduihiuhsdiuh08372498327sdfkllk
    JICOFO_COMPONENT_SECRET: aslkdjosidhvo398498eofdsv()()jakdlsvndkljn
    JVB_AUTH_PASSWORD: askpdokadklcmaopjpjq+2r23
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/ingress.class: traefik
  web:
    image: jitsi/web:stable-5870
    imagePullPolicy: IfNotPresent
    env:
      - name: JICOFO_AUTH_USER
        value: focus
      - name: XMPP_DOMAIN
        value: meet.jitsi
      - name: XMPP_AUTH_DOMAIN
        value: auth.meet.jitsi
      - name: XMPP_INTERNAL_MUC_DOMAIN
        value: internal-muc.meet.jitsi
      - name: XMPP_BOSH_URL_BASE
        value: http://127.0.0.1:5280
      - name: XMPP_MUC_DOMAIN
        value: muc.meet.jitsi
      - name: TZ
        value: Europe/Amsterdam
      - name: JVB_TCP_HARVESTER_DISABLED
        value: "true"
  prosody:
    image: jitsi/prosody:stable-5870
    imagePullPolicy: IfNotPresent
    env:
      - name: XMPP_DOMAIN
        value: meet.jitsi
      - name: XMPP_AUTH_DOMAIN
        value: auth.meet.jitsi
      - name: XMPP_MUC_DOMAIN
        value: muc.meet.jitsi
      - name: XMPP_INTERNAL_MUC_DOMAIN
        value: internal-muc.meet.jitsi
      - name: JVB_AUTH_USER
        value: jvb
      - name: JICOFO_AUTH_USER
        value: focus
      - name: TZ
        value: Europe/Amsterdam
      - name: JVB_TCP_HARVESTER_DISABLED
        value: "true"
  jicofo:
    image: jitsi/jicofo:stable-5870
    imagePullPolicy: IfNotPresent
    env:
      - name: XMPP_DOMAIN
        value: meet.jitsi
      - name: XMPP_AUTH_DOMAIN
        value: auth.meet.jitsi
      - name: XMPP_MUC_DOMAIN
        value: muc.meet.jitsi
      - name: XMPP_INTERNAL_MUC_DOMAIN
        value: internal-muc.meet.jitsi
      - name: JICOFO_AUTH_USER
        value: focus
      - name: TZ
        value: Europe/Amsterdam
      - name: JVB_BREWERY_MUC
        value: jvbbrewery
  jvb:
    image: jitsi/jvb:stable-5870
    imagePullPolicy: IfNotPresent
    env:
      - name: XMPP_DOMAIN
        value: meet.jitsi
      - name: XMPP_AUTH_DOMAIN
        value: auth.meet.jitsi
      - name: XMPP_INTERNAL_MUC_DOMAIN
        value: internal-muc.meet.jitsi
      - name: JVB_STUN_SERVERS
        value: stun.l.google.com:19302,stun1.l.google.com:19302,stun2.l.google.com:19302
      - name: JICOFO_AUTH_USER
        value: focus
      - name: JVB_TCP_HARVESTER_DISABLED
        value: "true"
      - name: JVB_AUTH_USER
        value: jvb
      - name: JVB_PORT
        value: "30300"
      - name: JVB_BREWERY_MUC
        value: jvbbrewery
      - name: TZ
        value: Europe/Amsterdam

env:
  secretKey: "tempSecretKeyNeedsToChange"
  adminApiToken: "123"
  jitsiIss: ""
  secretJitsiKey: ""
  jitsiPrivateMode: false
  debugMode: false

back:
  name: "back"
  replicaCount: 2

  image:
    repository: "thecodingmachine/workadventure-back"
    pullPolicy: IfNotPresent

  env: {}

  extraEnvs:
    - name: KEY
      value: value

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: api # FQDN is computed with this and domain
        paths: [/]
    tls:
      - secretName: workadventure-api-tls
        hosts:
          - api # FQDN is computed with this and domain

front:
  name: "front"
  replicaCount: 1

  image:
    repository: "thecodingmachine/workadventure-front"
    pullPolicy: IfNotPresent

  env:
    turnServer: "turn:coturn.workadventu.re:443,turns:coturn.workadventu.re:443"
    turnUser: "workadventure"
    turnPassword: "WorkAdventure123"
    startRoomUniverse: "global"
    startRoomPath: "/Floor0/floor0.json"

  extraEnvs:
    - name: KEY
      value: value

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: play
        paths: [/]
    tls:
      - secretName: workadventure-play-tls
        hosts:
          - play

pusher:
  name: "pusher"
  replicaCount: 2

  image:
    repository: "thecodingmachine/workadventure-pusher"
    pullPolicy: IfNotPresent

  env: {}

  extraEnvs:
    - name: KEY
      value: value

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: pusher
        paths: [/]
    tls:
      - secretName: workadventure-pusher-tls
        hosts:
          - pusher

uploader:
  name: "uploader"
  replicaCount: 2

  image:
    repository: "thecodingmachine/workadventure-uploader"
    pullPolicy: IfNotPresent

  env: {}

  extraEnvs:
    - name: KEY
      value: value

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: uploader
        paths: [/]
    tls:
      - secretName: workadventure-uploader-tls
        hosts:
          - uploader

maps:
  name: "maps"
  replicaCount: 2

  image:
    repository: "thecodingmachine/workadventure-maps"
    pullPolicy: IfNotPresent

  env: {}

  extraEnvs:
    - name: KEY
      value: value

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: maps
        paths: [/]
    tls:
      - secretName: workadventure-maps-tls
        hosts:
          - maps

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
